// Generated by Dagger (https://dagger.dev).
package com.example.exercise;

import android.content.Context;
import androidx.health.services.client.HealthServicesClient;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainModule_ProvideHealthServicesClientFactory implements Factory<HealthServicesClient> {
  private final MainModule module;

  private final Provider<Context> contextProvider;

  public MainModule_ProvideHealthServicesClientFactory(MainModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public HealthServicesClient get() {
    return provideHealthServicesClient(module, contextProvider.get());
  }

  public static MainModule_ProvideHealthServicesClientFactory create(MainModule module,
      Provider<Context> contextProvider) {
    return new MainModule_ProvideHealthServicesClientFactory(module, contextProvider);
  }

  public static HealthServicesClient provideHealthServicesClient(MainModule instance,
      Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideHealthServicesClient(context));
  }
}
