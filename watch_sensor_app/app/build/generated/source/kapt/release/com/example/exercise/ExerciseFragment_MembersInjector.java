// Generated by Dagger (https://dagger.dev).
package com.example.exercise;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ExerciseFragment_MembersInjector implements MembersInjector<ExerciseFragment> {
  private final Provider<HealthServicesManager> healthServicesManagerProvider;

  public ExerciseFragment_MembersInjector(
      Provider<HealthServicesManager> healthServicesManagerProvider) {
    this.healthServicesManagerProvider = healthServicesManagerProvider;
  }

  public static MembersInjector<ExerciseFragment> create(
      Provider<HealthServicesManager> healthServicesManagerProvider) {
    return new ExerciseFragment_MembersInjector(healthServicesManagerProvider);
  }

  @Override
  public void injectMembers(ExerciseFragment instance) {
    injectHealthServicesManager(instance, healthServicesManagerProvider.get());
  }

  @InjectedFieldSignature("com.example.exercise.ExerciseFragment.healthServicesManager")
  public static void injectHealthServicesManager(ExerciseFragment instance,
      HealthServicesManager healthServicesManager) {
    instance.healthServicesManager = healthServicesManager;
  }
}
